{"version":3,"sources":["components/ShowTime.js","components/TodoTitle.js","components/TodoCount.js","components/TodoList.js","components/TodoItem.js","components/TodoItems.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ShowTime","state","time","_this2","this","interval","setInterval","setState","Date","toLocaleTimeString","clearInterval","react_default","a","createElement","className","Component","TodoTitle","color","TodoCount","_this","console","log","ntodo","props","entries","length","done_count","filter","item","ndone_count","onClick","deleteTodos","TodoList","align","onSubmit","addItem","placeholder","ref","inputElement","value","currentItem","text","onChange","handleInput","type","id","search","clearsearch","defaultValue","clearfilter","TodoItem","button","is_done","toggleDone","key","editItem","deleteItem","TodoItems","map","src_components_TodoItem","Footer","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items","e","target","now","preventDefault","newItem","isUnique","toConsumableArray","concat","saveStateToLocalStorage","alert","nname","prompt","oname","filteredItems","option","doneTodos","ndoneTodos","to_toggle","scount","filter_state","document","getElementById","filter_value","query","todos","getElementsByTagName","i","root_todo","parentNode","textContent","toLowerCase","startsWith","removeAttribute","setAttribute","getAttribute","Number","JSON","parse","localStorage","getItem","setItem","stringify","str","alltodos","Fragment","src_components_ShowTime","components_TodoTitle","src_components_TodoList","components_TodoCount","components_TodoItems","src_components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.633bc0d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ShowTime.css\";\n\nclass ShowTime extends Component {\n  state = {\n    time: null\n  };\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.setState({ time: new Date().toLocaleTimeString() }),\n      500\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    // console.log(\"Show Time Rendered\");\n\n    return <div className=\"ticktock\">{this.state.time}</div>;\n  }\n}\n\nexport default ShowTime;\n","import React, { Component } from \"react\";\n\nclass TodoTitle extends Component {\n  render() {\n    return (\n      <center>\n        <h2>\n          Todo Using{\" \"}\n          <font color=\"green\">\n            React\n            <font color=\"maroon\">JS</font>\n          </font>{\" \"}\n          (v1.0_localStorage)\n        </h2>\n      </center>\n    );\n  }\n}\n\nexport default TodoTitle;\n","import React, { Component } from \"react\";\nimport \"./TodoList.css\";\n\nclass TodoCount extends Component {\n  render() {\n    console.log(\"TodoCount rendered\");\n    var ntodo = this.props.entries.length;\n\n    var done_count = this.props.entries.filter(item => {\n      return item.state === \"done\";\n    }).length;\n\n    var ndone_count = this.props.entries.filter(item => {\n      return item.state === \"ndone\";\n    }).length;\n\n    return (\n      <div>\n        <center>\n          <b>\n            TASKS\n            <div className=\"black\">\n              <thinking onClick={() => this.props.deleteTodos(0)}>\n                .:\n                {ntodo}\n                :.\n              </thinking>\n            </div>\n          </b>\n          <b className=\"rbold\">\n            TODO{\" \"}\n            <thinking onClick={() => this.props.deleteTodos(1)}>\n              .:\n              {ndone_count}\n              :.\n            </thinking>\n          </b>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          <b className=\"gbold\">\n            DONE{\" \"}\n            <thinking onClick={() => this.props.deleteTodos(2)}>\n              .:\n              {done_count}\n              :.\n            </thinking>\n          </b>\n          {/* <br /> */}\n          <br />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default TodoCount;\n","import React, { Component } from \"react\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  render() {\n    console.log(\"TODOLIST Rendered\");\n\n    return (\n      <div className=\"main\" align=\"center\">\n        <div className=\"header\">\n          <form onSubmit={this.props.addItem}>\n            <input\n              placeholder=\"Task\"\n              ref={this.props.inputElement}\n              value={this.props.currentItem.text}\n              onChange={this.props.handleInput}\n            />\n            <button type=\"submit\">Add Task</button>\n            <input\n              id=\"search\"\n              placeholder=\"Search Tasks . . . \"\n              onChange={this.props.search}\n              // onFocus={(this.input.value = \"\")}\n              // onBlur={this.props.clearsearch}\n            />\n            <button onClick={this.props.clearsearch}>Clear Search</button>\n            Filter\n            <select id=\"filter\" onChange={this.props.filter} defaultValue={\"0\"}>\n              <option value=\"0\" />\n              <option value=\"1\" className=\"gbold\">\n                DONE\n              </option>\n              <option value=\"2\" className=\"rbold\">\n                NOT DONE\n              </option>\n            </select>\n            <button onClick={this.props.clearfilter}>Clear Filter</button>\n          </form>\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport \"./TodoItem.css\";\n\nclass TodoItem extends Component {\n  render() {\n    // console.log(this);\n    console.log(\"TODOITEM Rendered\");\n\n    const item_state = this.props.item.state;\n    let button;\n    let is_done;\n\n    if (item_state === \"ndone\") {\n      button = (\n        <button\n          onClick={() => this.props.toggleDone(this.props.item.key)}\n          className=\"btn-ndone\"\n        >\n          Done\n        </button>\n      );\n      // spaces equivalent to tick mark\n      is_done = \"\\u2005\\u2005\\u2004\\u0020\";\n    } else {\n      button = (\n        <button\n          onClick={() => this.props.toggleDone(this.props.item.key)}\n          className=\"btn-done\"\n        >\n          Not Done\n        </button>\n      );\n      // tick mark\n      is_done = \"\\u2714\\u0020\";\n    }\n\n    return (\n      <div className=\"row\" state={this.props.item.state}>\n        <div className=\"margin\" />\n        <div className=\"column\">\n          <span className=\"tick\">{is_done}</span>\n          <span key={this.props.item.key}>{this.props.item.text}</span>\n          <label className=\"fade\">{Date(this.props.item.key)}</label>\n        </div>\n        <div className=\"column\">\n          <button\n            onClick={() => this.props.editItem(this.props.item.key)}\n            className=\"btn-edit\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => this.props.deleteItem(this.props.item.key)}\n            className=\"btn-delete\"\n          >\n            Delete\n          </button>\n          {button}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\n\nclass TodoItems extends Component {\n  render() {\n    console.log(\"TODO ITEMS Rendered\");\n\n    return this.props.entries.map(item => (\n      <TodoItem\n        item={item}\n        key={item.key}\n        editItem={this.props.editItem}\n        deleteItem={this.props.deleteItem}\n        toggleDone={this.props.toggleDone}\n      />\n    ));\n  }\n}\n\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <br />\n        &spades; Brihat &spades;\n        <br />\n        <br />\n        <b>Features: </b>\n        <br />\n        Filter TASK to do and TASK done | Activities are logged to console |\n        Search Tasks | Task counter | localStorage | React JS\n        <br />\n        <br />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport ShowTime from \"./components/ShowTime\";\nimport TodoTitle from \"./components/TodoTitle\";\nimport TodoCount from \"./components/TodoCount\";\nimport TodoList from \"./components/TodoList\";\nimport TodoItems from \"./components/TodoItems\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    currentItem: {\n      text: \"\",\n      key: \"\",\n      state: \"\"\n    }\n  };\n\n  constructor() {\n    console.log(\"APP Constructor\");\n    super();\n    this.state = {\n      items: [],\n      currentItem: { text: \"\", key: \"\", state: \"\" }\n    };\n  }\n\n  // retrieve todo items from local storage after components have mounted\n  componentDidMount() {\n    console.log(\"APP Components Did Mount\");\n\n    const items = JSON.parse(localStorage.getItem(\"todos\"));\n    if (items !== null) {\n      this.setState({ items: items });\n    }\n  }\n\n  // save todo items to local storage\n  saveStateToLocalStorage() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.items));\n    console.log(\"Saved to local\");\n  }\n\n  // perform this if there is change in input box\n  handleInput = e => {\n    const itemText = e.target.value;\n    const currentItem = {\n      text: itemText,\n      key: Date.now(),\n      state: \"ndone\"\n    };\n    this.setState({ currentItem });\n    console.log(typeof new Date(this.state.currentItem.key));\n    console.log(Date(this.state.currentItem.key));\n  };\n\n  // add a todo item\n  addItem = e => {\n    e.preventDefault();\n    console.log(\"Add Item\");\n\n    const newItem = this.state.currentItem;\n    if (this.isUnique(newItem.text)) {\n      if (newItem.text !== \"\") {\n        console.log(newItem);\n        const items = [...this.state.items, newItem];\n        this.setState(\n          {\n            items: items,\n            currentItem: { text: \"\", key: \"\", state: \"\" }\n          },\n          () => {\n            this.saveStateToLocalStorage();\n            console.log(\"New Task Added\", newItem.text);\n          }\n        );\n      }\n    } else {\n      console.log(\"Duplicate Task found\");\n      alert(\"This task already exists\");\n    }\n  };\n\n  // checks if given str is unique\n  isUnique(str) {\n    const alltodos = this.state.items;\n    for (var i = 0; i < alltodos.length; i++) {\n      if (alltodos[i].text.toLowerCase() === str.toLowerCase()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // edit 'this' todo item\n  editItem = key => {\n    var nname = prompt(\"Enter new name\");\n    if (!this.isUnique(nname)) {\n      alert(\"This name already exist\");\n      return;\n    }\n\n    var oname = this.state.items.filter(item => {\n      return item.key === key;\n    })[0].text;\n\n    this.state.items.filter(item => {\n      return item.key === key;\n    })[0].text = nname;\n\n    this.setState(this.state.items, () => {\n      this.saveStateToLocalStorage();\n    });\n    console.log(\"Task \", oname, \"updated to \", nname);\n  };\n\n  // deletes this todo item\n  deleteItem = key => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key;\n    });\n    this.setState(\n      {\n        items: filteredItems\n      },\n      () => {\n        this.saveStateToLocalStorage();\n      }\n    );\n    console.log(\"Task Deleted\");\n  };\n\n  // delete todos\n  deleteTodos = option => {\n    // 0 - all\n    // 1 - not done\n    // 2 - done\n    if (option === 0) {\n      // let resetTodo = [];\n      this.setState(\n        {\n          items: []\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else if (option === 1) {\n      const doneTodos = this.state.items.filter(item => {\n        return item.state === \"done\";\n      });\n      console.log(doneTodos);\n      this.setState(\n        {\n          items: doneTodos\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else if (option === 2) {\n      let ndoneTodos = this.state.items.filter(item => {\n        return item.state === \"ndone\";\n      });\n      console.log(ndoneTodos);\n\n      this.setState(\n        {\n          items: ndoneTodos\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else {\n      console.log(\"Invalid options\");\n    }\n  };\n\n  // toggles done and not done for 'this' todo item\n  toggleDone = key => {\n    var to_toggle = this.state.items.filter(item => {\n      return item.key === key;\n    })[0];\n\n    if (to_toggle.state === \"ndone\") {\n      to_toggle.state = \"done\";\n    } else {\n      to_toggle.state = \"ndone\";\n    }\n\n    this.setState(this.state.items, () => {\n      this.saveStateToLocalStorage();\n    });\n    console.log(\"Task State Toggled\");\n  };\n\n  // search todos\n  search = e => {\n    let scount = 0;\n    console.log(\"search\", e.target.value);\n    // console.log(e.target.value);\n    // console.log(document.getElementById(\"filter\").value);\n    var filter_state = document.getElementById(\"filter\").value;\n    var filter_value = \"\";\n\n    if (filter_state === \"1\") {\n      filter_value = \"done\";\n    } else if (filter_state === \"2\") {\n      filter_value = \"ndone\";\n    } else {\n      filter_value = \"\";\n    }\n    // console.log(filter_value);\n    var query = e.target.value;\n    let todos = document.getElementsByTagName(\"span\");\n    for (var i = 0; i < todos.length; i++) {\n      var root_todo = todos[i].parentNode.parentNode;\n      if (filter_value === \"\") {\n        if (\n          !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n        ) {\n          root_todo.setAttribute(\"style\", \"display:none\");\n        } else {\n          scount++;\n          root_todo.removeAttribute(\"style\");\n        }\n      } else {\n        if (\n          !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase()) ||\n          root_todo.getAttribute(\"state\") !== filter_value\n        ) {\n          root_todo.setAttribute(\"style\", \"display:none\");\n        } else {\n          scount++;\n          root_todo.removeAttribute(\"style\");\n        }\n      }\n    }\n    if (query !== \"\") {\n      document.getElementById(\"info1\").textContent =\n        \"SEARCH RESULT (\" + scount + \")\";\n    } else {\n      document.getElementById(\"info1\").textContent = \"\";\n    }\n  };\n\n  // clears search box\n  clearsearch = e => {\n    e.preventDefault();\n    e.target.value = \"\";\n    document.getElementById(\"search\").value = \"\";\n    this.search(e);\n    console.log(\"Search Cleared\");\n  };\n\n  // filtering todos\n  filter = e => {\n    // 0 - clear filter\n    // 1 - done filter\n    // 2 - not done filter\n    let filter = Number(e.target.value);\n    const query = document.getElementById(\"search\").value;\n\n    let todos = document.getElementsByTagName(\"span\");\n\n    switch (filter) {\n      case 0:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.removeAttribute(\"style\");\n          } else {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          }\n        }\n        document.getElementById(\"info2\").textContent = \"\";\n\n        break;\n\n      case 1:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            root_todo.getAttribute(\"state\") !== \"done\" ||\n            !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          } else {\n            root_todo.removeAttribute(\"style\");\n          }\n        }\n        document.getElementById(\"info2\").textContent = \"DONE FILTER APPLIED\";\n\n        break;\n      case 2:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            root_todo.getAttribute(\"state\") !== \"ndone\" ||\n            !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          } else {\n            root_todo.removeAttribute(\"style\");\n          }\n        }\n        document.getElementById(\"info2\").textContent =\n          \"NOT DONE FILTER APPLIED\";\n        break;\n      default:\n    }\n  };\n\n  // clears all filter\n  clearfilter = e => {\n    e.preventDefault();\n    e.target.value = 0;\n    document.getElementById(\"filter\").value = \"0\";\n    this.filter(e);\n    console.log(\"Filter Cleared\");\n  };\n\n  // render all components\n  render() {\n    console.log(\"APP Rendered\");\n    return (\n      <React.Fragment>\n        {/* this shows current time on top center */}\n\n        <div className=\"App\">\n          <br />\n          {/* title of the app */}\n          <div className=\"sticky-time\">\n            <ShowTime />\n          </div>\n          <TodoTitle />\n          <div className=\"sticky-title\">\n            {/* utilities to add search filter todos */}\n            <TodoList\n              addItem={this.addItem}\n              inputElement={this.inputElement}\n              handleInput={this.handleInput}\n              currentItem={this.state.currentItem}\n              search={this.search}\n              clearsearch={this.clearsearch}\n              filter={this.filter}\n              clearfilter={this.clearfilter}\n            />\n          </div>\n          {/* separator */}\n          <hr />\n          <div className=\"sticky-count\">\n            {/* counter for todos: all, not done, and done */}\n            <TodoCount\n              entries={this.state.items}\n              deleteTodos={this.deleteTodos}\n            />\n          </div>\n          <center>\n            <b id=\"info1\" className=\"bbold\" />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <b id=\"info2\" className=\"bbold\" />\n          </center>\n          {/* all todos list view with edit, delete, and toggle button */}\n          <TodoItems\n            key={this.state.items}\n            entries={this.state.items}\n            editItem={this.editItem}\n            deleteItem={this.deleteItem}\n            toggleDone={this.toggleDone}\n          />\n        </div>\n\n        {/* Footer */}\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}