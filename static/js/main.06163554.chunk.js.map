{"version":3,"sources":["components/ShowTime.js","components/TodoTitle.js","components/TodoCount.js","components/TodoList.js","components/TodoItem.js","components/TodoItems.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ShowTime","state","time","_this2","this","interval","setInterval","setState","Date","toLocaleTimeString","clearInterval","console","log","react_default","a","createElement","className","Component","TodoTitle","color","TodoCount","_this","ntodo","props","entries","length","done_count","filter","item","ndone_count","onClick","deleteTodos","TodoList","align","onSubmit","addItem","placeholder","ref","inputElement","value","currentItem","text","onChange","handleInput","type","id","search","defaultValue","clearsearch","TodoItem","button","is_done","toggleDone","key","editItem","deleteItem","TodoItems","map","src_components_TodoItem","Footer","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items","e","target","toLocaleString","preventDefault","newItem","isUnique","toConsumableArray","concat","saveStateToLocalStorage","alert","nname","prompt","oname","filteredItems","option","doneTodos","ndoneTodos","to_toggle","document","getElementById","filter_state","filter_value","query","getElementsByTagName","todos","i","root_todo","parentNode","textContent","toLowerCase","startsWith","removeAttribute","setAttribute","getAttribute","Number","clearfilter","JSON","parse","localStorage","getItem","setItem","stringify","str","alltodos","Fragment","src_components_ShowTime","components_TodoTitle","src_components_TodoList","components_TodoCount","components_TodoItems","src_components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06163554.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ShowTime.css\";\n\nclass ShowTime extends Component {\n  state = {\n    time: null\n  };\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.setState({ time: new Date().toLocaleTimeString() }),\n      500\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    console.log(\"Show Time Rendered\");\n\n    return (\n      <div className=\"ticktock\">\n        <br />\n        {this.state.time}\n      </div>\n    );\n  }\n}\n\nexport default ShowTime;\n","import React, { Component } from \"react\";\n\nclass TodoTitle extends Component {\n  render() {\n    return (\n      <center>\n        <h2>\n          Todo Using{\" \"}\n          <font color=\"green\">\n            React\n            <font color=\"maroon\">JS</font>\n          </font>{\" \"}\n          (v1.0_localStorage)\n        </h2>\n      </center>\n    );\n  }\n}\n\nexport default TodoTitle;\n","import React, { Component } from \"react\";\nimport \"./TodoList.css\";\n\nclass TodoCount extends Component {\n  render() {\n    console.log(\"TodoCount rendered\");\n    var ntodo = this.props.entries.length;\n\n    var done_count = this.props.entries.filter(item => {\n      return item.state === \"done\";\n    }).length;\n\n    var ndone_count = this.props.entries.filter(item => {\n      return item.state === \"ndone\";\n    }).length;\n\n    return (\n      <div>\n        <center>\n          <b>\n            TASKS\n            <div className=\"black\">\n              <thinking onClick={() => this.props.deleteTodos(0)}>\n                .:\n                {ntodo}\n                :.\n              </thinking>\n            </div>\n          </b>\n          <b className=\"rbold\">\n            TODO{\" \"}\n            <thinking onClick={() => this.props.deleteTodos(1)}>\n              .:\n              {ndone_count}\n              :.\n            </thinking>\n          </b>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          <b className=\"gbold\">\n            DONE{\" \"}\n            <thinking onClick={() => this.props.deleteTodos(2)}>\n              .:\n              {done_count}\n              :.\n            </thinking>\n          </b>\n          {/* <br /> */}\n          <br />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default TodoCount;\n","import React, { Component } from \"react\";\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  render() {\n    console.log(\"TODOLIST Rendered\");\n\n    return (\n      <div className=\"main\" align=\"center\">\n        <div className=\"header\">\n          <form onSubmit={this.props.addItem}>\n            <input\n              placeholder=\"Task\"\n              ref={this.props.inputElement}\n              value={this.props.currentItem.text}\n              onChange={this.props.handleInput}\n            />\n            <button type=\"submit\">Add Task</button>\n            <input\n              id=\"search\"\n              placeholder=\"Search Tasks . . . \"\n              onChange={this.props.search}\n              // onFocus={(this.input.value = \"\")}\n              // onBlur={this.props.clearsearch}\n            />\n            Filter\n            <select id=\"filter\" onChange={this.props.filter} defaultValue={\"0\"}>\n              <option value=\"0\" />\n              <option value=\"1\" className=\"gbold\">\n                DONE\n              </option>\n              <option value=\"2\" className=\"rbold\">\n                NOT DONE\n              </option>\n            </select>\n            <button onClick={this.props.clearsearch}>Clear Filter</button>\n          </form>\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport \"./TodoItem.css\";\n\nclass TodoItem extends Component {\n  render() {\n    // console.log(this);\n    console.log(\"TODOITEM Rendered\");\n\n    const item_state = this.props.item.state;\n    let button;\n    let is_done;\n\n    if (item_state === \"ndone\") {\n      button = (\n        <button\n          onClick={() => this.props.toggleDone(this.props.item.key)}\n          className=\"btn-ndone\"\n        >\n          Done\n        </button>\n      );\n      // spaces equivalent to tick mark\n      is_done = \"\\u2005\\u2005\\u2004\\u0020\";\n    } else {\n      button = (\n        <button\n          onClick={() => this.props.toggleDone(this.props.item.key)}\n          className=\"btn-done\"\n        >\n          Not Done\n        </button>\n      );\n      // tick mark\n      is_done = \"\\u2714\\u0020\";\n    }\n\n    return (\n      <div className=\"row\" state={this.props.item.state}>\n        <div className=\"margin\" />\n        <div className=\"column\">\n          <span className=\"tick\">{is_done}</span>\n          <span key={this.props.item.key}>{this.props.item.text}</span>\n          <label className=\"fade\">{this.props.item.key}</label>\n        </div>\n        <div className=\"column\">\n          <button\n            onClick={() => this.props.editItem(this.props.item.key)}\n            className=\"btn-edit\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => this.props.deleteItem(this.props.item.key)}\n            className=\"btn-delete\"\n          >\n            Delete\n          </button>\n          {button}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\n\nclass TodoItems extends Component {\n  render() {\n    console.log(\"TODO ITEMS Rendered\");\n\n    return this.props.entries.map(item => (\n      <TodoItem\n        item={item}\n        key={item.key}\n        editItem={this.props.editItem}\n        deleteItem={this.props.deleteItem}\n        toggleDone={this.props.toggleDone}\n      />\n    ));\n  }\n}\n\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <br />\n        &spades; Brihat &spades;\n        <br />\n        <br />\n        <b>Features: </b>\n        <br />\n        Filter TASK to do and TASK done | Activities are logged to console |\n        Search Tasks | Task counter | localStorage | React JS\n        <br />\n        <br />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport ShowTime from \"./components/ShowTime\";\nimport TodoTitle from \"./components/TodoTitle\";\nimport TodoCount from \"./components/TodoCount\";\nimport TodoList from \"./components/TodoList\";\nimport TodoItems from \"./components/TodoItems\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    currentItem: {\n      text: \"\",\n      key: \"\",\n      state: \"\"\n    }\n  };\n\n  constructor() {\n    console.log(\"APP Constructor\");\n    super();\n    this.state = {\n      items: [],\n      currentItem: { text: \"\", key: \"\", state: \"\" }\n    };\n  }\n\n  // retrieve todo items from local storage after components have mounted\n  componentDidMount() {\n    console.log(\"APP Components Did Mount\");\n\n    const items = JSON.parse(localStorage.getItem(\"todos\"));\n    if (items !== null) {\n      this.setState({ items: items });\n    }\n  }\n\n  // save todo items to local storage\n  saveStateToLocalStorage() {\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.items));\n    console.log(\"Saved to local\");\n  }\n\n  // perform this if there is change in input box\n  handleInput = e => {\n    const itemText = e.target.value;\n    const currentItem = {\n      text: itemText,\n      key: new Date().toLocaleString(),\n      state: \"ndone\"\n    };\n    this.setState({ currentItem });\n  };\n\n  // add a todo item\n  addItem = e => {\n    e.preventDefault();\n    console.log(\"Add Item\");\n\n    const newItem = this.state.currentItem;\n    if (this.isUnique(newItem.text)) {\n      if (newItem.text !== \"\") {\n        console.log(newItem);\n        const items = [...this.state.items, newItem];\n        this.setState(\n          {\n            items: items,\n            currentItem: { text: \"\", key: \"\", state: \"\" }\n          },\n          () => {\n            this.saveStateToLocalStorage();\n            console.log(\"New Task Added\", newItem.text);\n          }\n        );\n      }\n    } else {\n      console.log(\"Duplicate Task found\");\n      alert(\"This task already exists\");\n    }\n  };\n\n  // checks if given str is unique\n  isUnique(str) {\n    const alltodos = this.state.items;\n    for (var i = 0; i < alltodos.length; i++) {\n      if (alltodos[i].text.toLowerCase() === str.toLowerCase()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // edit 'this' todo item\n  editItem = key => {\n    var nname = prompt(\"Enter new name\");\n    if (!this.isUnique(nname)) {\n      alert(\"This name already exist\");\n      return;\n    }\n\n    var oname = this.state.items.filter(item => {\n      return item.key === key;\n    })[0].text;\n\n    this.state.items.filter(item => {\n      return item.key === key;\n    })[0].text = nname;\n\n    this.setState(this.state.items, () => {\n      this.saveStateToLocalStorage();\n    });\n    console.log(\"Task \", oname, \"updated to \", nname);\n  };\n\n  // deletes this todo item\n  deleteItem = key => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key;\n    });\n    this.setState(\n      {\n        items: filteredItems\n      },\n      () => {\n        this.saveStateToLocalStorage();\n      }\n    );\n    console.log(\"Task Deleted\");\n  };\n\n  // delete todos\n  deleteTodos = option => {\n    // 0 - all\n    // 1 - not done\n    // 2 - done\n    if (option === 0) {\n      // let resetTodo = [];\n      this.setState(\n        {\n          items: []\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else if (option === 1) {\n      const doneTodos = this.state.items.filter(item => {\n        return item.state === \"done\";\n      });\n      console.log(doneTodos);\n      this.setState(\n        {\n          items: doneTodos\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else if (option === 2) {\n      let ndoneTodos = this.state.items.filter(item => {\n        return item.state === \"ndone\";\n      });\n      console.log(ndoneTodos);\n\n      this.setState(\n        {\n          items: ndoneTodos\n        },\n        () => {\n          this.saveStateToLocalStorage();\n        }\n      );\n    } else {\n      console.log(\"Invalid options\");\n    }\n  };\n\n  // toggles done and not done for 'this' todo item\n  toggleDone = key => {\n    var to_toggle = this.state.items.filter(item => {\n      return item.key === key;\n    })[0];\n\n    if (to_toggle.state === \"ndone\") {\n      to_toggle.state = \"done\";\n    } else {\n      to_toggle.state = \"ndone\";\n    }\n\n    this.setState(this.state.items, () => {\n      this.saveStateToLocalStorage();\n    });\n    console.log(\"Task State Toggled\");\n  };\n\n  // search todos\n  search = e => {\n    console.log(\"search\");\n    console.log(e.target.value);\n    console.log(document.getElementById(\"filter\").value);\n    var filter_state = document.getElementById(\"filter\").value;\n    var filter_value = \"\";\n\n    if (filter_state === \"1\") {\n      filter_value = \"done\";\n    } else if (filter_state === \"2\") {\n      filter_value = \"ndone\";\n    } else {\n      filter_value = \"\";\n    }\n    console.log(filter_value);\n    var query = e.target.value;\n    console.log(document.getElementsByTagName(\"span\"));\n    let todos = document.getElementsByTagName(\"span\");\n    for (var i = 0; i < todos.length; i++) {\n      var root_todo = todos[i].parentNode.parentNode;\n      if (filter_value === \"\") {\n        if (\n          !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n        ) {\n          root_todo.setAttribute(\"style\", \"display:none\");\n        } else {\n          // scount++;\n          root_todo.removeAttribute(\"style\");\n        }\n      } else {\n        if (\n          !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase()) ||\n          root_todo.getAttribute(\"state\") !== filter_value\n        ) {\n          root_todo.setAttribute(\"style\", \"display:none\");\n        } else {\n          // scount++;\n          root_todo.removeAttribute(\"style\");\n        }\n      }\n    }\n  };\n\n  clearsearch = () => {\n    // console.log(\"triggrere on blur\");\n    console.log(document.getElementById(\"search\").value);\n    document.getElementById(\"search\").value = \"\";\n  };\n\n  // filtering todos\n  filter = e => {\n    // 0 - clear filter\n    // 1 - done filter\n    // 2 - not done filter\n    console.log(typeof e);\n    console.log(e);\n    let filter = Number(e.target.value);\n    const query = document.getElementById(\"search\").value;\n\n    let todos = document.getElementsByTagName(\"span\");\n\n    switch (filter) {\n      case 0:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.removeAttribute(\"style\");\n          } else {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          }\n        }\n        break;\n\n      case 1:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            root_todo.getAttribute(\"state\") !== \"done\" ||\n            !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          } else {\n            root_todo.removeAttribute(\"style\");\n          }\n        }\n        break;\n      case 2:\n        for (let i = 0; i < todos.length; i++) {\n          let root_todo = todos[i].parentNode.parentNode;\n          if (\n            root_todo.getAttribute(\"state\") !== \"ndone\" ||\n            !todos[i].textContent.toLowerCase().startsWith(query.toLowerCase())\n          ) {\n            root_todo.setAttribute(\"style\", \"display:none\");\n          } else {\n            root_todo.removeAttribute(\"style\");\n          }\n        }\n        break;\n      default:\n    }\n  };\n\n  // clears all filter\n  clearfilter = () => {\n    document.getElementById(\"filter\").value = \"0\";\n    // document.getElementById(\"filter\").onClick();\n  };\n\n  // render all components\n  render() {\n    console.log(\"APP Rendered\");\n    return (\n      <React.Fragment>\n        {/* this shows current time on top center */}\n\n        <div className=\"App\">\n          {/* title of the app */}\n          <ShowTime />\n          <TodoTitle />\n\n          <div className=\"sticky-title\">\n            {/* utilities to add search filter todos */}\n            <TodoList\n              addItem={this.addItem}\n              inputElement={this.inputElement}\n              handleInput={this.handleInput}\n              currentItem={this.state.currentItem}\n              search={this.search}\n              clearsearch={this.clearsearch}\n              filter={this.filter}\n              clearfilter={this.clearfilter}\n            />\n          </div>\n\n          {/* separator */}\n          <hr />\n\n          <div className=\"sticky-count\">\n            {/* counter for todos: all, not done, and done */}\n            <TodoCount\n              entries={this.state.items}\n              deleteTodos={this.deleteTodos}\n            />\n          </div>\n\n          {/* all todos list view with edit, delete, and toggle button */}\n          <TodoItems\n            key={this.state.items}\n            entries={this.state.items}\n            editItem={this.editItem}\n            deleteItem={this.deleteItem}\n            toggleDone={this.toggleDone}\n          />\n        </div>\n\n        {/* Footer */}\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}